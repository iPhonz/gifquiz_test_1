// Anthropic API integration
const ANTHROPIC_API_KEY = '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';

async function generateQuestion(newsTitle) {
    try {
        const response = await fetch('https://api.anthropic.com/v1/messages', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'x-api-key': ANTHROPIC_API_KEY,
                'anthropic-version': '2023-06-01'
            },
            body: JSON.stringify({
                'messages': [{
                    'role': 'user',
                    'content': `Generate a thought-provoking quiz question based on this news headline: "${newsTitle}". Make it open-ended and engaging, focusing on critical thinking and analysis. Keep it under 150 characters.`
                }],
                'model': 'claude-3-haiku-20240307',
                'max_tokens': 150
            })
        });
        const data = await response.json();
        return data.content || `What implications do you see in this news: ${newsTitle}?`;
    } catch (error) {
        console.error('Error generating question:', error);
        return `What are your thoughts on: ${newsTitle}?`;
    }
}

export { generateQuestion };